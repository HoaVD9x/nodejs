{"ast":null,"code":"var _jsxFileName = \"/Users/vuongdinhhoa/Desktop/fullstact/nodejs/frontEnd/reactjs/src/containers/Auth/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { push } from \"connected-react-router\";\nimport { handler_login } from \"../../services/user_service\"; // import * as actions from \"../store/actions\";\n\nimport * as actions from \"../../store/actions\";\nimport './Login.scss';\nimport { FormattedMessage } from 'react-intl';\nimport { textChangeRangeIsUnchanged } from 'typescript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handle_onchange_username = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handle_onchange_password = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handlerlogin = async () => {\n      console.log(\"username: \", this.state.username, \"password: \", this.state.password);\n      await user_service.handler_login(this.state.username, this.state.password);\n    };\n\n    this.handle_show_passowrd = () => {\n      this.setState({\n        is_show_password: !this.state.is_show_password\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      is_show_password: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_backgroud\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login_container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-content row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 text-center text-login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 form-group login-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              placeholder: \"Enter your username\",\n              value: this.state.username,\n              onChange: event => this.handle_onchange_username(event),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 form-group login-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"customer_input_password\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: this.state.is_show_password ? 'text' : 'password',\n                placeholder: \"Enter your password\",\n                value: this.state.password,\n                onChange: event => this.handle_onchange_password(event),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => {\n                  this.handle_show_passowrd();\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: this.state.is_show_password ? \"far fa-eye\" : \"far fa-eye-slash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-login\",\n              onClick: () => {\n                this.handlerlogin();\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"forgot-password\",\n              children: \"forgot your password ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-other-login\",\n              children: \"Or Login wiht:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 social-login\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fab fa-google google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fab fa-facebook facebook\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    navigate: path => dispatch(push(path)),\n    adminLoginSuccess: adminInfo => dispatch(actions.adminLoginSuccess(adminInfo)),\n    adminLoginFail: () => dispatch(actions.adminLoginFail())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/vuongdinhhoa/Desktop/fullstact/nodejs/frontEnd/reactjs/src/containers/Auth/Login.js"],"names":["React","Component","connect","push","handler_login","actions","FormattedMessage","textChangeRangeIsUnchanged","Login","constructor","props","handle_onchange_username","event","setState","username","target","value","handle_onchange_password","password","handlerlogin","console","log","state","user_service","handle_show_passowrd","is_show_password","render","mapStateToProps","language","app","mapDispatchToProps","dispatch","navigate","path","adminLoginSuccess","adminInfo","adminLoginFail"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { push } from \"connected-react-router\";\nimport { handler_login } from \"../../services/user_service\"\n\n// import * as actions from \"../store/actions\";\nimport * as actions from \"../../store/actions\";\nimport './Login.scss';\nimport { FormattedMessage } from 'react-intl';\nimport { textChangeRangeIsUnchanged } from 'typescript';\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            is_show_password: false\n        }\n    }\n\n    handle_onchange_username = (event) => {\n        this.setState({\n            username: event.target.value\n        })\n    }\n    handle_onchange_password = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    handlerlogin = async () => {\n        console.log(\"username: \", this.state.username, \"password: \", this.state.password)\n\n        await user_service.handler_login(this.state.username, this.state.password)\n    }\n\n    handle_show_passowrd = () => {\n        this.setState({\n            is_show_password: !this.state.is_show_password\n        })\n\n    }\n    render() {\n        return (\n            <div className='login_backgroud'>\n                <div className='login_container'>\n                    <div className='login-content row'>\n                        <div className='col-12 text-center text-login'>Login</div>\n                        <div className='col-12 form-group login-input'>\n                            <label>User Name</label>\n                            <input className='form-control' type='text' placeholder='Enter your username'\n                                value={this.state.username}\n                                onChange={(event) => this.handle_onchange_username(event)}\n                                required />\n                        </div>\n                        <div className='col-12 form-group login-input'>\n                            <label>Password</label>\n                            <div className='customer_input_password'>\n                                <input className='form-control' type={this.state.is_show_password ? 'text' : 'password'} placeholder='Enter your password'\n                                    value={this.state.password}\n                                    onChange={(event) => this.handle_onchange_password(event)}\n                                    required />\n                                <span onClick={() => { this.handle_show_passowrd() }}>\n                                    <i class={this.state.is_show_password ? \"far fa-eye\" : \"far fa-eye-slash\"}></i>\n                                </span>\n\n                            </div>\n                        </div>\n\n                        <div className='col-12'>\n                            <button className='btn-login' onClick={() => { this.handlerlogin() }}>\n                                Login\n                            </button>\n                        </div>\n\n                        <div className='col-12'>\n                            <span className='forgot-password'>\n                                forgot your password ?\n                            </span>\n                        </div>\n                        <div className='col-12 text-center'>\n                            <span className='text-other-login'>Or Login wiht:</span>\n                        </div>\n                        <div className='col-12 social-login'>\n                            <i class=\"fab fa-google google\"></i>\n                            <i class=\"fab fa-facebook facebook\"></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.app.language\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        navigate: (path) => dispatch(push(path)),\n        adminLoginSuccess: (adminInfo) => dispatch(actions.adminLoginSuccess(adminInfo)),\n        adminLoginFail: () => dispatch(actions.adminLoginFail()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}