[{"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\index.js":"1","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\redux.js":"2","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\serviceWorker.js":"3","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\hoc\\IntlProviderWrapper.js":"4","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\App.js":"5","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\hoc\\authentication.js":"6","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\reducers\\rootReducer.js":"7","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\actions\\actionTypes.js":"8","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\routes\\System.js":"9","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\Header\\Header.js":"10","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\routes\\Home.js":"11","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\Auth\\Login.js":"12","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\components\\CustomToast.js":"13","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\components\\ConfirmModal.js":"14","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\index.js":"15","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\reducers\\appReducer.js":"16","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\reducers\\adminReducer.js":"17","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\reducers\\userReducer.js":"18","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\Header\\menuApp.js":"19","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\components\\Navigator.js":"20","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\components\\CustomScrollbars.js":"21","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\System\\ProductManage.js":"22","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\System\\UserManage.js":"23","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\System\\RegisterPackageGroupOrAcc.js":"24","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\services\\user_service.js":"25","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\actions\\index.js":"26","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\KeyCodeUtils.js":"27","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\constant.js":"28","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\LanguageUtils.js":"29","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\CommonUtils.js":"30","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\ToastUtil.js":"31","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\emitter.js":"32","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\System\\modalEditUser.js":"33","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\axios.js":"34","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\System\\modal_user.js":"35","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\actions\\userActions.js":"36","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\actions\\appActions.js":"37","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\config.js":"38","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\HomePage\\homePage.js":"39","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\HomePage\\HomeHeader.js":"40"},{"size":926,"mtime":1697786980206,"results":"41","hashOfConfig":"42"},{"size":1477,"mtime":1697786980206,"results":"43","hashOfConfig":"42"},{"size":5086,"mtime":1697786980206,"results":"44","hashOfConfig":"42"},{"size":1095,"mtime":1697786980206,"results":"45","hashOfConfig":"42"},{"size":3067,"mtime":1697852856570,"results":"46","hashOfConfig":"42"},{"size":789,"mtime":1697786980206,"results":"47","hashOfConfig":"42"},{"size":1017,"mtime":1697786980206,"results":"48","hashOfConfig":"42"},{"size":387,"mtime":1697786980206,"results":"49","hashOfConfig":"42"},{"size":1350,"mtime":1697786980206,"results":"50","hashOfConfig":"42"},{"size":1156,"mtime":1697786980190,"results":"51","hashOfConfig":"42"},{"size":638,"mtime":1697852348555,"results":"52","hashOfConfig":"42"},{"size":5130,"mtime":1697786980190,"results":"53","hashOfConfig":"42"},{"size":2282,"mtime":1697786980174,"results":"54","hashOfConfig":"42"},{"size":3862,"mtime":1697786980174,"results":"55","hashOfConfig":"42"},{"size":257,"mtime":1697844903880,"results":"56","hashOfConfig":"42"},{"size":965,"mtime":1698030128715,"results":"57","hashOfConfig":"42"},{"size":837,"mtime":1697786980206,"results":"58","hashOfConfig":"42"},{"size":835,"mtime":1697786980206,"results":"59","hashOfConfig":"42"},{"size":735,"mtime":1697786980190,"results":"60","hashOfConfig":"42"},{"size":9326,"mtime":1697786980190,"results":"61","hashOfConfig":"42"},{"size":3173,"mtime":1697786980174,"results":"62","hashOfConfig":"42"},{"size":573,"mtime":1697786980190,"results":"63","hashOfConfig":"42"},{"size":6407,"mtime":1697850651057,"results":"64","hashOfConfig":"42"},{"size":638,"mtime":1697786980190,"results":"65","hashOfConfig":"42"},{"size":669,"mtime":1697850824810,"results":"66","hashOfConfig":"42"},{"size":61,"mtime":1697786980206,"results":"67","hashOfConfig":"42"},{"size":684,"mtime":1697786980223,"results":"68","hashOfConfig":"42"},{"size":423,"mtime":1697852399294,"results":"69","hashOfConfig":"42"},{"size":961,"mtime":1697786980223,"results":"70","hashOfConfig":"42"},{"size":156,"mtime":1697786980223,"results":"71","hashOfConfig":"42"},{"size":3001,"mtime":1697786980223,"results":"72","hashOfConfig":"42"},{"size":138,"mtime":1697844903880,"results":"73","hashOfConfig":"42"},{"size":5331,"mtime":1697849842386,"results":"74","hashOfConfig":"42"},{"size":2437,"mtime":1697786980174,"results":"75","hashOfConfig":"42"},{"size":5437,"mtime":1697844903880,"results":"76","hashOfConfig":"42"},{"size":425,"mtime":1697786980206,"results":"77","hashOfConfig":"42"},{"size":317,"mtime":1697786980206,"results":"78","hashOfConfig":"42"},{"size":445,"mtime":1697786980190,"results":"79","hashOfConfig":"42"},{"size":556,"mtime":1697853464986,"results":"80","hashOfConfig":"42"},{"size":6423,"mtime":1698030395755,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"cvcm84",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\index.js",[],["173","174"],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\redux.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\serviceWorker.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\hoc\\IntlProviderWrapper.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\App.js",["175"],"import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\n\r\nimport { path } from '../utils'\r\n\r\nimport Home from '../routes/Home';\r\n// import Login from '../routes/Login';\r\nimport Login from './Auth/Login';\r\nimport Header from './Header/Header';\r\nimport System from '../routes/System';\r\n\r\nimport { CustomToastCloseButton } from '../components/CustomToast';\r\nimport HomePage from \"./HomePage/homePage.js\"\r\nimport ConfirmModal from '../components/ConfirmModal';\r\n\r\nclass App extends Component {\r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        {/* <ConfirmModal /> */}\r\n                        {this.props.isLoggedIn && <Header />}\r\n\r\n                        <span className=\"content-container\">\r\n                            <Switch>\r\n                                <Route path={path.HOME} exact component={(Home)} />\r\n                                <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\r\n                                <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\r\n                                <Route path={path.HOMEPAGE} component={HomePage} />\r\n                            </Switch>\r\n                        </span>\r\n\r\n                        <ToastContainer\r\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\r\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\r\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\hoc\\authentication.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\reducers\\rootReducer.js",["176","177"],"import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\n// const adminPersistConfig = {\r\n//     ...persistCommonConfig,\r\n//     key: 'admin',\r\n//     whitelist: ['isLoggedIn', 'adminInfo']\r\n// };\r\n\r\nconst user_persist_Config = {\r\n    ...persistCommonConfig,\r\n    key: \"user\",\r\n    whitelist: ['isLoggedIn', 'user_info']\r\n};\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    // admin: persistReducer(adminPersistConfig, adminReducer),\r\n    user: persistReducer(user_persist_Config, userReducer),\r\n\r\n    app: appReducer\r\n})","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\routes\\System.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\Header\\Header.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\routes\\Home.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\Auth\\Login.js",["178","179"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\nimport { handler_login } from \"../../services/user_service\"\r\n\r\n// import * as actions from \"../store/actions\";\r\nimport * as actions from \"../../store/actions\";\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { textChangeRangeIsUnchanged } from 'typescript';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            is_show_password: false,\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    handle_onchange_username = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n    handle_onchange_password = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerlogin = async () => {\r\n        this.setState({\r\n            message: \"\"\r\n        })\r\n        try {\r\n            let data = await handler_login(this.state.username, this.state.password)\r\n            if (data && data.err_code !== 0) {\r\n                this.setState({\r\n                    message: data.message\r\n                })\r\n            }\r\n\r\n            if (data && data.err_code === 0) {\r\n                //todo\r\n                this.props.user_login_succss(data.user)\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e.message)\r\n            if (e.response) {\r\n                if (e.response.data) {\r\n                    this.setState({\r\n                        message: e.response.data.message\r\n                    })\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    handle_show_passowrd = () => {\r\n        this.setState({\r\n            is_show_password: !this.state.is_show_password\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='login_backgroud'>\r\n                <div className='login_container'>\r\n                    <div className='login-content row'>\r\n                        <div className='col-12 text-center text-login'>Login</div>\r\n                        <div className='col-12 form-group login-input'>\r\n                            <label>User Name</label>\r\n                            <input className='form-control' type='text' placeholder='Enter your username'\r\n                                value={this.state.username}\r\n                                onChange={(event) => this.handle_onchange_username(event)}\r\n                                required />\r\n                        </div>\r\n                        <div className='col-12 form-group login-input'>\r\n                            <label>Password</label>\r\n                            <div className='customer_input_password'>\r\n                                <input className='form-control' type={this.state.is_show_password ? 'text' : 'password'} placeholder='Enter your password'\r\n                                    value={this.state.password}\r\n                                    onChange={(event) => this.handle_onchange_password(event)}\r\n                                    required />\r\n                                <span onClick={() => { this.handle_show_passowrd() }}>\r\n                                    <i className={this.state.is_show_password ? \"far fa-eye\" : \"far fa-eye-slash\"}></i>\r\n                                </span>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12' style={{ color: \"red\" }}>\r\n                            {this.state.message}\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <button className='btn-login' onClick={() => { this.handlerlogin() }}>\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className='col-12'>\r\n                            <span className='forgot-password'>\r\n                                forgot your password ?\r\n                            </span>\r\n                        </div>\r\n                        <div className='col-12 text-center'>\r\n                            <span className='text-other-login'>Or Login wiht:</span>\r\n                        </div>\r\n                        <div className='col-12 social-login'>\r\n                            <i className=\"fab fa-google google\"></i>\r\n                            <i className=\"fab fa-facebook facebook\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n\r\n        // adminLoginFail: () => dispatch(actions.adminLoginFail()),\r\n        user_login_succss: (user_info) => dispatch(actions.user_login_succss(user_info))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\components\\CustomToast.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\components\\ConfirmModal.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\index.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\reducers\\appReducer.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\reducers\\adminReducer.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\Header\\menuApp.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\components\\Navigator.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\components\\CustomScrollbars.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\System\\ProductManage.js",["180"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass ProductManage extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\" >Manage products</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\r\n","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\System\\UserManage.js",["181","182","183","184"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { get_all_user, createNewUserService, deleteUserService, editUserService } from '../../services/user_service';\r\nimport ModalUser from './modal_user';\r\nimport modalEditUser from './modalEditUser';\r\nimport \"./user_manage.scss\";\r\nimport { emitter } from '../../utils/emitter';\r\nimport { couldStartTrivia, isEnumMember } from 'typescript';\r\nimport ModalEditUser from './modalEditUser';\r\n\r\n\r\n\r\n\r\nclass UserManage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            arrUsers: [],\r\n            isOpenModalUser: false,\r\n            isOpenModalEditUser: false,\r\n            userEdit: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUserFromData();\r\n\r\n    }\r\n    getAllUserFromData = async () => {\r\n        let response = await get_all_user(\"ALL\");\r\n        if (response && response.err_code === 0) {\r\n            this.setState({\r\n                arrUsers: response.users\r\n            })\r\n        }\r\n    }\r\n\r\n    handler_add_new_user = () => {\r\n        this.setState({\r\n            isOpenModalUser: true,\r\n        })\r\n    }\r\n    /*** life cicle\r\n     * run component\r\n     * 1 run contructor -> init state  \r\n     * 2 Did mount (set state)\r\n     * 3 render\r\n     * \r\n     * \r\n     */\r\n\r\n    toggeUserModal = () => {\r\n        this.setState({\r\n            isOpenModalUser: !this.state.isOpenModalUser\r\n        })\r\n    }\r\n\r\n\r\n    createNewUser = async (data) => {\r\n        try {\r\n            let response = await createNewUserService(data)\r\n            if (response && response.err_code !== 0) {\r\n                alert(response.err_message)\r\n            } else {\r\n                await this.getAllUserFromData()\r\n                this.toggeUserModal()\r\n                emitter.emit(\"EVENT_CLEAR_MODAL_DATA\", { \"id\": \"your ID\" })\r\n            }\r\n        } catch (e) {\r\n            console.Console(e)\r\n        }\r\n    }\r\n\r\n    handlerDeleteUser = async (user_id) => {\r\n        try {\r\n            let response = await deleteUserService(user_id)\r\n            if (response && response.err_code === 0) {\r\n                await this.getAllUserFromData()\r\n            } else {\r\n                alert(response.err_message)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    handleEditUser = (user) => {\r\n        this.setState({\r\n            isOpenModalEditUser: true,\r\n            userEdit: user\r\n        })\r\n    }\r\n\r\n    toggeEditUserModal = () => {\r\n        this.setState({\r\n            isOpenModalEditUser: !this.state.isOpenModalEditUser\r\n        })\r\n    }\r\n\r\n    doEditUser = async (user) => {\r\n        try {\r\n            let response = await editUserService(user)\r\n            if (response && response.err_code === 0) {\r\n                this.setState({\r\n                    isOpenModalEditUser: false\r\n                })\r\n                await this.getAllUserFromData()\r\n            } else {\r\n                alert(response.err_message)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let arrUsers = this.state.arrUsers\r\n        return (\r\n            <div className=\"user_container \">\r\n                <ModalUser\r\n                    isOpen={this.state.isOpenModalUser}\r\n                    topggerFromParent={this.toggeUserModal}\r\n                    createNewUser={this.createNewUser}\r\n                />\r\n                {this.state.isOpenModalEditUser &&\r\n                    <ModalEditUser\r\n                        isOpen={this.state.isOpenModalEditUser}\r\n                        topggerFromParent={this.toggeEditUserModal}\r\n                        currentUser={this.state.userEdit}\r\n                        editUser={this.doEditUser}\r\n                    />}\r\n                <div className='title text-center'>Manage users</div>\r\n                <div className='mx-3'>\r\n                    <button className='btn btn-primary px-3' onClick={() => this.handler_add_new_user()}> <i className=\"fas fa-plus\"></i> Add new User</button>\r\n                </div>\r\n                <div className='user_table mt-3 mx-1 text-center'>\r\n                    <table className=\"table table-bordered mt-3 mx-1\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">First Name</th>\r\n                                <th scope=\"col\">Last Name</th>\r\n                                <th scope=\"col\">Address</th>\r\n                                <th scope=\"col\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {arrUsers && arrUsers.map((item, index) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.first_name}</td>\r\n                                        <td>{item.last_name}</td>\r\n                                        <td>{item.address}</td>\r\n                                        <td>\r\n                                            <button\r\n                                                className='btn-edit'\r\n                                                onClick={() => { this.handleEditUser(item) }}\r\n                                            ><i className=\"fas fa-pencil-alt\"></i></button>\r\n                                            <button\r\n                                                className='btn-delete'\r\n                                                onClick={() => { this.handlerDeleteUser(item.id) }}\r\n                                            ><i className=\"fas fa-trash\"></i></button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\System\\RegisterPackageGroupOrAcc.js",["185","186"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass RegisterPackageGroupOrAcc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                register package group or account\r\n            </div>)\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPackageGroupOrAcc);\r\n","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\services\\user_service.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\actions\\index.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\KeyCodeUtils.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\constant.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\LanguageUtils.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\CommonUtils.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\ToastUtil.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\utils\\emitter.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\System\\modalEditUser.js",["187","188","189"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { emitter } from '../../utils/emitter';\r\nimport _ from \"lodash\"// edit object \r\n\r\nclass ModalEditUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            address: \"\"\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        let user = this.props.currentUser\r\n        if (user && !_.isEmpty(user)) {\r\n            this.setState({\r\n                id: user.id,\r\n                email: user.email,\r\n                password: \"hascode\",\r\n                first_name: user.first_name,\r\n                last_name: user.last_name,\r\n                address: user.address\r\n            })\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.topggerFromParent();\r\n    }\r\n\r\n    handlerOnchangeInput = (event, id) => {\r\n        let copyState = { ... this.state }\r\n        copyState[id] = event.target.value\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n\r\n    }\r\n\r\n    handlerEditUser = () => {\r\n        let isValid = this.checkValidateInput(this.state)\r\n        if (isValid) {\r\n            // call api model\r\n            this.props.editUser(this.state)\r\n        }\r\n    }\r\n\r\n    checkValidateInput = (data) => {\r\n        let isValid = true;\r\n        let arrInput = [\"email\", \"password\", \"first_name\", \"last_name\", \"address\"];\r\n        for (let index = 0; index < arrInput.length; index++) {\r\n            if (!this.state[arrInput[index]]) {\r\n                isValid = false;\r\n                alert(\"missing parameter: \" + arrInput[index])\r\n                break;\r\n            }\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => this.toggle()}\r\n                className='modal-container-user'\r\n                size='lg'\r\n                centered>\r\n                <ModalHeader toggle={() => this.toggle()} className='text-center'>Edit new user</ModalHeader>\r\n                <ModalBody>\r\n                    <div className='modal-user-body'>\r\n                        <div className='input-container'>\r\n                            <label > Email</label>\r\n                            <input\r\n                                type='email'\r\n                                onChange={(event) => { this.handlerOnchangeInput(event, \"email\") }}\r\n                                value={this.state.email}\r\n                                disabled\r\n                            ></input>\r\n\r\n                        </div>\r\n                        <div className='input-container'>\r\n                            <label > Password</label>\r\n                            <input\r\n                                type='password'\r\n                                onChange={(event) => { this.handlerOnchangeInput(event, \"password\") }}\r\n                                value={this.state.password}\r\n                                disabled\r\n                            ></input>\r\n\r\n                        </div>\r\n                        <div className='input-container'>\r\n                            <label > First Name</label>\r\n                            <input\r\n                                type='text'\r\n                                onChange={(event) => { this.handlerOnchangeInput(event, \"first_name\") }}\r\n                                value={this.state.first_name}></input>\r\n\r\n                        </div>\r\n                        <div className='input-container'>\r\n                            <label > Last Name</label>\r\n                            <input\r\n                                type='text'\r\n                                onChange={(event) => { this.handlerOnchangeInput(event, \"last_name\") }}\r\n                                value={this.state.last_name}></input>\r\n\r\n                        </div>\r\n                        <div className='input-container max-width-input'>\r\n                            <label > Address</label>\r\n                            <input\r\n                                type='text'\r\n                                onChange={(event) => { this.handlerOnchangeInput(event, \"address\") }}\r\n                                value={this.state.address}></input>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\"\r\n                        className='px-3'\r\n                        onClick={() => { this.handlerEditUser() }}>\r\n                        Save User\r\n                    </Button>{' '}\r\n                    <Button color=\"secondary\" className='px-3' onClick={() => this.toggle()}>\r\n                        Close\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n\r\n","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\axios.js",["190","191","192"],"import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    withCredentials: true\r\n});\r\n\r\n// const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n//     const error = new Error();\r\n//     error.httpStatusCode = httpStatusCode;\r\n//     error.statusCode = statusCode;\r\n//     error.errorMessage = errorMessage;\r\n//     error.problems = problems;\r\n//     error.errorCode = errorCode + \"\";\r\n//     return error;\r\n// };\r\n\r\n// export const isSuccessStatusCode = (s) => {\r\n//     // May be string or number\r\n//     const statusType = typeof s;\r\n//     return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n// };\r\n\r\n// instance.interceptors.response.use(\r\n//     (response) => {\r\n//         // Thrown error for request with OK status code\r\n//         const { data } = response;\r\n//         if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\r\n//             return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\r\n//         }\r\n\r\n//         // Return direct data to callback\r\n//         if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\r\n//             return data['d'];\r\n//         }\r\n//         // Handle special case\r\n//         if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\r\n//             return null;\r\n//         }\r\n//         return response.data;\r\n//     },\r\n//     (error) => {\r\n//         const { response } = error;\r\n//         if (response == null) {\r\n//             return Promise.reject(error);\r\n//         }\r\n\r\n//         const { data } = response;\r\n\r\n//         if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\r\n//             return Promise.reject(createError(response.status, data['s'], data['errmsg']));\r\n//         }\r\n\r\n//         if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\r\n//             return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\r\n//         }\r\n\r\n//         return Promise.reject(createError(response.status));\r\n//     }\r\n// );\r\n\r\ninstance.interceptors.response.use((response) => {\r\n    const { data } = response;\r\n    return response.data\r\n})\r\n\r\nexport default instance;\r\n","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\System\\modal_user.js",["193","194"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { emitter } from '../../utils/emitter';\r\n\r\nclass ModalUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            address: \"\"\r\n        }\r\n\r\n        this.listenToEmitter();\r\n    }\r\n\r\n    listenToEmitter = () => {\r\n        emitter.on(\"EVENT_CLEAR_MODAL_DATA\", data => {\r\n            // reset state \r\n            this.setState({\r\n                email: \"\",\r\n                password: \"\",\r\n                first_name: \"\",\r\n                last_name: \"\",\r\n                address: \"\"\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.topggerFromParent();\r\n    }\r\n\r\n    handlerOnchangeInput = (event, id) => {\r\n\r\n        // bad Code\r\n        // this.state[id] = event.target.value;\r\n        // this.setState({\r\n        //     ... this.state\r\n        // }, () => {\r\n        //     console.log(\"check bad Code\", this.state)\r\n        // })\r\n        // this.state[id]= event.target.value;\r\n        let copyState = { ... this.state }\r\n        copyState[id] = event.target.value\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n\r\n    }\r\n\r\n    handler_add_new_user = () => {\r\n        let isValid = this.checkValidateInput(this.state)\r\n        if (isValid) {\r\n            // call api model\r\n            this.props.createNewUser(this.state)\r\n        }\r\n    }\r\n\r\n    checkValidateInput = (data) => {\r\n        let isValid = true;\r\n        let arrInput = [\"email\", \"password\", \"first_name\", \"last_name\", \"address\"];\r\n        for (let index = 0; index < arrInput.length; index++) {\r\n            if (!this.state[arrInput[index]]) {\r\n                isValid = false;\r\n                alert(\"missing parameter: \" + arrInput[index])\r\n                break;\r\n            }\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => this.toggle()}\r\n                className='modal-container-user'\r\n                size='lg'\r\n                centered>\r\n                <ModalHeader toggle={() => this.toggle()} className='text-center'>Create new user</ModalHeader>\r\n                <ModalBody>\r\n                    <div className='modal-user-body'>\r\n                        <div className='input-container'>\r\n                            <label > Email</label>\r\n                            <input\r\n                                type='email'\r\n                                onChange={(event) => { this.handlerOnchangeInput(event, \"email\") }}\r\n                                value={this.state.email}\r\n                            ></input>\r\n\r\n                        </div>\r\n                        <div className='input-container'>\r\n                            <label > Password</label>\r\n                            <input\r\n                                type='password'\r\n                                onChange={(event) => { this.handlerOnchangeInput(event, \"password\") }}\r\n                                value={this.state.password}></input>\r\n\r\n                        </div>\r\n                        <div className='input-container'>\r\n                            <label > First Name</label>\r\n                            <input\r\n                                type='text'\r\n                                onChange={(event) => { this.handlerOnchangeInput(event, \"first_name\") }}\r\n                                value={this.state.first_name}></input>\r\n\r\n                        </div>\r\n                        <div className='input-container'>\r\n                            <label > Last Name</label>\r\n                            <input\r\n                                type='text'\r\n                                onChange={(event) => { this.handlerOnchangeInput(event, \"last_name\") }}\r\n                                value={this.state.last_name}></input>\r\n\r\n                        </div>\r\n                        <div className='input-container max-width-input'>\r\n                            <label > Address</label>\r\n                            <input\r\n                                type='text'\r\n                                onChange={(event) => { this.handlerOnchangeInput(event, \"address\") }}\r\n                                value={this.state.address}></input>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\"\r\n                        className='px-3'\r\n                        onClick={() => { this.handler_add_new_user() }}>\r\n                        Add New User\r\n                    </Button>{' '}\r\n                    <Button color=\"secondary\" className='px-3' onClick={() => this.toggle()}>\r\n                        Close\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n\r\n","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\actions\\userActions.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\store\\actions\\appActions.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\config.js",["195"],"export default {\r\n    api: {\r\n        API_BASE_URL: \"http://localhost:8080/\",\r\n        ROUTER_BASE_NAME: null,\r\n    },\r\n    app: {\r\n        /**\r\n         * The base URL for all locations. If your app is served from a sub-directory on your server, you'll want to set\r\n         * this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.\r\n         */\r\n        ROUTER_BASE_NAME: null,\r\n    }\r\n};\r\n","C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\HomePage\\homePage.js",[],"C:\\Users\\hoawe\\Desktop\\fullStack\\nodejs\\frontEnd\\src\\containers\\HomePage\\HomeHeader.js",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":21,"column":8,"nodeType":"202","messageId":"203","endLine":21,"endColumn":20},{"ruleId":"200","severity":1,"message":"204","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":20},{"ruleId":"205","severity":1,"message":"206","line":29,"column":1,"nodeType":"207","endLine":35,"endColumn":3},{"ruleId":"200","severity":1,"message":"208","line":9,"column":10,"nodeType":"202","messageId":"203","endLine":9,"endColumn":26},{"ruleId":"200","severity":1,"message":"209","line":10,"column":10,"nodeType":"202","messageId":"203","endLine":10,"endColumn":36},{"ruleId":"200","severity":1,"message":"208","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":26},{"ruleId":"200","severity":1,"message":"208","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":26},{"ruleId":"200","severity":1,"message":"210","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":21},{"ruleId":"200","severity":1,"message":"211","line":9,"column":10,"nodeType":"202","messageId":"203","endLine":9,"endColumn":26},{"ruleId":"200","severity":1,"message":"212","line":9,"column":28,"nodeType":"202","messageId":"203","endLine":9,"endColumn":40},{"ruleId":"200","severity":1,"message":"208","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":26},{"ruleId":"213","severity":1,"message":"214","line":6,"column":5,"nodeType":"215","messageId":"216","endLine":9,"endColumn":6},{"ruleId":"200","severity":1,"message":"208","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":26},{"ruleId":"200","severity":1,"message":"217","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":43,"column":30,"nodeType":"220","messageId":"221","endLine":43,"endColumn":31,"fix":"222"},{"ruleId":"200","severity":1,"message":"223","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":9},{"ruleId":"200","severity":1,"message":"224","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":14},{"ruleId":"200","severity":1,"message":"225","line":65,"column":13,"nodeType":"202","messageId":"203","endLine":65,"endColumn":17},{"ruleId":"200","severity":1,"message":"208","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":26},{"ruleId":"218","severity":1,"message":"219","line":52,"column":30,"nodeType":"220","messageId":"221","endLine":52,"endColumn":31,"fix":"226"},{"ruleId":"205","severity":1,"message":"227","line":1,"column":1,"nodeType":"207","endLine":13,"endColumn":3},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'ConfirmModal' is defined but never used.","Identifier","unusedVar","'adminReducer' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'FormattedMessage' is defined but never used.","'textChangeRangeIsUnchanged' is defined but never used.","'modalEditUser' is defined but never used.","'couldStartTrivia' is defined but never used.","'isEnumMember' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'emitter' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"230","text":"231"},"'_' is defined but never used.","'config' is defined but never used.","'data' is assigned a value but never used.",{"range":"232","text":"231"},"Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation",[1151,1152],"",[1355,1356]]